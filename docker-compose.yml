# Docker-compose run command
# docker-compose -p test_pulse up -d --build --remove-orphans

version: '3'
services:
  python-metrics-service:
    build: ./app
    container_name: test-puls-python-metrics-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - JIRA_URL=https://company_name.atlassian.net
      - JIRA_EMAIL=value
      - JIRA_API_TOKEN=value
      - QASE_URL=https://api.qase.io
      - QASE_PROJECT_CODE=value
      - QASE_API_TOKEN=value
      - GITHUB_TOKEN=value
      - GITHUB_REPO=value
    networks:
      - test-puls-network

  prometheus:
    image: prom/prometheus:latest
    container_name: test-puls-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    expose:
      - 9090
    ports:
      - "9090:9090"
    networks:
      - test-puls-network

  grafana:
    image: grafana/grafana:latest
    container_name: test-puls-grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "9020:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - test-puls-network
    depends_on:
      - prometheus

  pushgateway:
    image: prom/pushgateway:latest
    container_name: test-puls-pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"
    networks:
      - test-puls-network

networks:
  test-puls-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: